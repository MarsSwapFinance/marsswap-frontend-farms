{"version":3,"sources":["utils/formatBalance.ts","utils/callHelpers.ts","hooks/useHarvest.ts","utils/erc20.ts","config/index.ts","components/layout/Flex.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","components/Tags.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useStake.ts","hooks/useUnstake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","hooks/useApprove.ts","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/Divider.tsx","views/Farms/Farms.tsx"],"names":["getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","approve","lpContract","masterPlanetContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","getReferralAddress","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","referralAddress","localStorage","getItem","length","config","referral","useHarvest","farmPid","dispatch","useDispatch","useWallet","useMasterplanet","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","getContract","provider","Web3","eth","Contract","erc20","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","call","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","styled","div","Wrapper","theme","colors","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","getLiquidityUrlPathParts","quoteTokenAdresses","quoteTokenSymbol","tokenAddresses","firstPart","process","secondPart","StyledLinkExternal","LinkExternal","text","DetailsSection","isTokenOnly","bscScanAddress","removed","totalValueFormated","lpLabel","TranslateString","useI18n","liquidityUrlPathParts","justifyContent","href","external","NoFeeTag","variant","outline","startIcon","Flex","MultiplierTag","Tag","FarmImage","tokenSymbol","src","toLocaleLowerCase","alt","width","height","className","style","display","marginLeft","CardHeading","multiplier","risk","depositFee","alignItems","mb","flexDirection","useStake","onStake","console","info","useUnstake","onUnstake","StyledSpacer","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","i","StyledInputWrapper","input","radii","default","StyledInput","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","toLocaleString","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","disabled","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","rawStakedBalance","useModal","onPresentDeposit","onPresentWithdraw","mr","BalanceAndCompound","HarvestAction","earnings","rawEarningsBalance","marginBottom","Action","CardActions","farm","ethereum","requestedApproval","setRequestedApproval","useFarmFromPid","lpAddresses","useFarmUser","allowance","lpAddress","lpName","lpSymbol","toUpperCase","isApproved","isGreaterThan","onApprove","useApprove","handleApprove","error","textTransform","fontSize","pr","mt","fullWidth","UnlockButton","calculateCakeEarnedPerThousandDollars","number","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","cakePrice","finalAmount","Math","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","Text","ApyCalculatorModal","apy","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","ApyButton","onPresentApyModal","ml","RainbowLight","keyframes","StyledCardAccent","FCard","card","background","Divider","borderColor","ExpandingWrapper","FarmCard","bnbPrice","showExpandableSection","setShowExpandableSection","totalValue","lpTotalInQuoteToken","QuoteToken","BNB","MARS","Number","undefined","maximumFractionDigits","farmAPY","minimumFractionDigits","isNaN","CardActionsContainer","FarmTabButtons","stakedOnly","setStakedOnly","useRouteMatch","url","isExact","ToggleWrapper","checked","activeIndex","as","Link","to","textSubtle","Farms","farmsProps","path","farmsLP","useFarms","marsPrice","usePriceMarsBusd","usePriceBnbBusd","tokenMode","fastRefresh","useRefresh","useEffect","activeFarms","filter","inactiveFarms","stakedOnlyFarms","userData","farmsList","farmsToDisplay","marsRewardPerYear","marsPerBlock","poolWeight","comparedTo","Page","TickerBar","textAlign","exact","responsive"],"mappings":"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","file":"static/js/9.b9a7c592.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport config from 'frontend-config.json'\n\nexport const approve = async (lpContract, masterPlanetContract, account) => {\n  return lpContract.methods\n    .approve(masterPlanetContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterPlanetContract, pid, amount, account) => {\n  return masterPlanetContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), getReferralAddress())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), getReferralAddress())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterPlanetContract, pid, amount, account) => {\n  return masterPlanetContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterPlanetContract, pid, account) => {\n  return masterPlanetContract.methods\n    .deposit(pid, '0', getReferralAddress())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nconst getReferralAddress = () => {\n  const referralAddress = localStorage.getItem('ref')\n  return referralAddress && referralAddress.length === 42 ? referralAddress : config.referral['56']\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterplanet, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterPlanetContract = useMasterplanet()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterPlanetContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterPlanetContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterPlanetContract = useMasterplanet()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterPlanetContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterPlanetContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterPlanetContract = useMasterplanet()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterPlanetContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterPlanetContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterPlanetContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterPlanetContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\n// In the URL, using the quote token 'BNB' is represented by 'ETH'\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const firstPart = quoteTokenSymbol === 'BNB' ? 'ETH' : quoteTokenAdresses[chainId]\n  const secondPart = tokenAddresses[chainId]\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport { Text, Flex, Link, LinkExternal } from '@pancakeswap-libs/uikit'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Address } from 'config/constants/types'\n\nexport interface ExpandableSectionProps {\n  isTokenOnly?: boolean\n  bscScanAddress?: string\n  removed?: boolean\n  totalValueFormated?: string\n  lpLabel?: string\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  isTokenOnly,\n  bscScanAddress,\n  removed,\n  totalValueFormated,\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(316, 'Stake')}:</Text>\n        <StyledLinkExternal href={\n          isTokenOnly ?\n            `https://exchange.marsswap.finance/swap/${tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\n            :\n          `https://exchange.marsswap.finance/add/${liquidityUrlPathParts}`\n        }>\n          {lpLabel}\n        </StyledLinkExternal>\n      </Flex>\n      {!removed && (\n        <Flex justifyContent=\"space-between\">\n          <Text>{TranslateString(23, 'Total Liquidity')}:</Text>\n          <Text>{totalValueFormated}</Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"flex-start\">\n        <Link external href={bscScanAddress} bold={false}>\n          {TranslateString(356, 'View on BscScan')}\n        </Link>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\nimport { CommunityTag, CoreTag, NoFeeTag, RiskTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  risk?: number\n  depositFee?: number\n  tokenSymbol: string\n  quoteTokenSymbol: string\n  isTokenOnly: boolean\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 0.25rem;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst FarmImage = ({ tokenSymbol, quoteTokenSymbol, isTokenOnly }: { tokenSymbol: string, quoteTokenSymbol: string, isTokenOnly: boolean }) => {\n  if (isTokenOnly) {\n    return <Image src={`/images/tokens/${tokenSymbol.toLocaleLowerCase()}.png`} alt={quoteTokenSymbol} width={64} height={64} />\n  }\n  return (\n    <div className=\"flex space-x-1\" style={{ display: 'flex' }}>\n      <img src={`/images/tokens/${tokenSymbol.toLocaleLowerCase()}.png`} alt={tokenSymbol} width={40} height={40} />\n      <img src={`/images/tokens/${quoteTokenSymbol.toLocaleLowerCase()}.png`} alt={tokenSymbol} width={40} height={40} style={{ marginLeft: '-1em' }} />\n    </div>\n  )\n}\n\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  risk,\n  tokenSymbol,\n  quoteTokenSymbol,\n  isTokenOnly,\n  depositFee,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <FarmImage tokenSymbol={tokenSymbol} quoteTokenSymbol={quoteTokenSymbol} isTokenOnly={isTokenOnly}/>\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel}</Heading>\n        <Flex justifyContent=\"center\">\n          {depositFee === 0 ? <NoFeeTag /> : null}\n          {/* {isCommunityFarm ? <CommunityTag /> : <CoreTag />} */}\n          {/* <RiskTag risk={risk} /> */}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterplanet, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterPlanetContract = useMasterplanet()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterPlanetContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterPlanetContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterPlanetContract = useMasterplanet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterPlanetContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterPlanetContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterplanet, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterPlanetContract = useMasterplanet()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterPlanetContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterPlanetContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterPlanetContract = useMasterplanet()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterPlanetContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterPlanetContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  depositFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' , depositFeeBP = 0}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        depositFeeBP={depositFeeBP}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  depositFeeBP?: number\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({ stakedBalance, tokenBalance, tokenName, pid, depositFeeBP}) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} depositFeeBP={depositFeeBP} />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake')}</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport useStake from '../../../../hooks/useStake'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const { onStake } = useStake(pid)\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb='8px' justifyContent='space-between' alignItems='center'>\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <BalanceAndCompound>\n        {pid === 12 ?\n          <Button\n            disabled={rawEarningsBalance === 0 || pendingTx}\n            size='sm'\n            variant='secondary'\n            marginBottom='15px'\n            onClick={async () => {\n              setPendingTx(true)\n              await onStake(rawEarningsBalance.toString())\n              setPendingTx(false)\n            }}\n          >\n            {TranslateString(999, 'Compound')}\n          </Button>\n          : null}\n        <Button\n          disabled={rawEarningsBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n        >\n          {TranslateString(999, 'Harvest')}\n        </Button>\n      </BalanceAndCompound>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useMemo, useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { Farm } from 'state/types'\nimport { useFarmFromPid, useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport { useApprove } from 'hooks/useApprove'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpContract = useMemo(() => {\n    if(isTokenOnly){\n      return getContract(ethereum as provider, tokenAddress);\n    }\n    return getContract(ethereum as provider, lpAddress);\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    if (!lpAddress) {\n      return (\n        <Button mt=\"8px\" fullWidth disabled>\n          Farm not started yet\n        </Button>\n      )\n    }\n    return isApproved ? (\n      <StakeAction stakedBalance={stakedBalance} tokenBalance={tokenBalance} tokenName={lpName} pid={pid} depositFeeBP={depositFeeBP} />\n    ) : (\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(999, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          MARS\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(999, 'Staked')}\n        </Text>\n      </Flex>\n      {\n        !account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()\n      }\n    </Action>\n  )\n}\n\nexport default CardActions\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterplanet, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterPlanetContract = useMasterplanet()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterPlanetContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterPlanetContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\n\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  const timesCompounded = 365\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const apyAsDecimal = farmApy / 100\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\n  const principal = 1000 / cakePrice\n\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\n  const interestEarned = finalAmount - principal\n  return roundToTwoDp(interestEarned)\n}\n\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage.toFixed(2)\n}\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\nimport { Address } from 'config/constants/types'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: BigNumber\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  cakePrice,\n  apy,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\n\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice })\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice })\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice })\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(999, 'MARS per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          999,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { CalculateIcon, IconButton, useModal } from '@pancakeswap-libs/uikit'\nimport { Address } from 'config/constants/types'\nimport ApyCalculatorModal from './ApyCalculatorModal'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: BigNumber\n  quoteTokenAdresses?: Address\n  quoteTokenSymbol?: string\n  tokenAddresses: Address\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({\n  lpLabel,\n  quoteTokenAdresses,\n  quoteTokenSymbol,\n  tokenAddresses,\n  cakePrice,\n  apy,\n}) => {\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      lpLabel={lpLabel}\n      quoteTokenAdresses={quoteTokenAdresses}\n      quoteTokenSymbol={quoteTokenSymbol}\n      tokenAddresses={tokenAddresses}\n      cakePrice={cakePrice}\n      apy={apy}\n    />,\n  )\n\n  return (\n    <IconButton onClick={onPresentApyModal} variant=\"text\" size=\"sm\" ml=\"4px\">\n      <CalculateIcon />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { QuoteToken } from 'config/constants/types'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(45deg,\n  rgba(255, 0, 0, 1) 0%,\n  rgba(255, 154, 0, 1) 10%,\n  rgba(208, 222, 33, 1) 20%,\n  rgba(79, 220, 74, 1) 30%,\n  rgba(63, 218, 216, 1) 40%,\n  rgba(47, 201, 226, 1) 50%,\n  rgba(28, 127, 238, 1) 60%,\n  rgba(95, 21, 242, 1) 70%,\n  rgba(186, 12, 248, 1) 80%,\n  rgba(251, 7, 217, 1) 90%,\n  rgba(255, 0, 0, 1) 100%);\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  bnbPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.MARS) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol\n  const earnLabel = 'MARS'\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  })\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, risk } = farm\n\n  const renderApy = () => {\n    if (farm.apy.isNaN()) {\n      return '-'\n    }\n    if (farm.apy) {\n      return (\n        <>\n        <ApyButton\n          lpLabel={lpLabel}\n          quoteTokenAdresses={quoteTokenAdresses}\n          quoteTokenSymbol={quoteTokenSymbol}\n          tokenAddresses={tokenAddresses}\n          cakePrice={cakePrice}\n          apy={farm.apy}\n        />\n        {farmAPY}%\n        </>\n      )\n    }\n    return <Skeleton height={24} width={80} />\n  }\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === 'MARS' && farm.lpAddresses[process.env.REACT_APP_CHAIN_ID] && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        risk={risk}\n        depositFee={farm.depositFeeBP}\n        tokenSymbol={farm.tokenSymbol}\n        quoteTokenSymbol={farm.quoteTokenSymbol}\n        isTokenOnly={farm.isTokenOnly}\n      />\n      {!removed && (\n        <Flex justifyContent='space-between' alignItems='center'>\n          <Text>{TranslateString(352, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {renderApy()}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent='space-between'>\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent='space-between'>\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n        <Text bold style={{ fontSize: '24px' }}>{(farm.depositFeeBP / 100)}%</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          isTokenOnly={farm.isTokenOnly}\n          bscScanAddress={\n            farm.isTokenOnly ?\n              `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\n              :\n              `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\n          }\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          quoteTokenAdresses={quoteTokenAdresses}\n          quoteTokenSymbol={quoteTokenSymbol}\n          tokenAddresses={tokenAddresses}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, Text, Toggle } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst FarmTabButtons = ({ stakedOnly, setStakedOnly }) => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ToggleWrapper>\n        <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\n        <Text> {TranslateString(699, 'Staked only')}</Text>\n      </ToggleWrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(698, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(700, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 32px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceMarsBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport TickerBar from 'components/TickerBar'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nexport interface FarmsProps{\n  tokenMode?: boolean\n}\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const marsPrice = usePriceMarsBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const {tokenMode} = farmsProps;\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n        const marsRewardPerBlock = new BigNumber(farm.marsPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\n        const marsRewardPerYear = marsRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = marsPrice.times(marsRewardPerYear);\n\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          totalValue = totalValue.times(bnbPrice);\n        }\n\n        if(totalValue.comparedTo(0) > 0){\n          apy = apy.div(totalValue);\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={marsPrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, marsPrice, ethereum],\n  )\n\n  return (\n    <Page>\n      <TickerBar />\n      <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {\n          tokenMode ?\n            TranslateString(10002, 'Stake tokens to earn MARS')\n            :\n          TranslateString(320, 'Stake LP tokens to earn MARS')\n        }\n      </Heading>\n      <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        The deposit fee will be used to buyback MARS\n      </Heading>\n      <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly}/>\n      <div>\n        <Divider />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsList(inactiveFarms, true)}\n          </Route>\n        </FlexLayout>\n      </div>\n      <Image src=\"/images/mars/mars-background.png\" alt=\"illustration\" width={1352} height={587} responsive />\n    </Page>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}