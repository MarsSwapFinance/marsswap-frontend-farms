{"version":3,"sources":["../../src/utils/debounce.js","../../src/utils/guidGenerator.js","../../src/utils/getHighest.js","../../src/utils/shouldNextTriggerOnMount.js","../../src/utils/getPosition.js","../../src/utils/getNextOffset.js","../../src/utils/getStartOffset.js","../../src/Element.js","../../src/utils/getDefaultState.js","../../src/index.js","hooks/useReferral.ts","views/Referrals/components/ReferralCard.tsx","views/Referrals/Referrals.tsx"],"names":["debounce","fn","time","timeout","functionCall","setTimeout","S4","Math","getHighest","elements","highest","el","nextTriggerOnMount","rect","mode","position","prevOffset","direction","width","getNext","from","start","index","offset","getFromOffset","getFrom","getTo","getNextOffset","getStartOffset","offsetRelative","Number","TickerElement","state","to","next","x","isMoving","nextTriggered","elementRef","React","componentDidMount","MutationObserver","characterData","childList","subtree","componentWillUnmount","onMutation","componentDidUpdate","prevState","prevProps","setPosition","id","onNext","setRect","getPosition","shouldNextTriggerOnMount","shouldTriggerNext","triggerNext","shouldFinish","animate","prevTimestamp","step","timestamp","progress","render","children","Component","propTypes","oneOfType","string","number","bool","func","defaultProps","getDefaultState","guidGenerator","Ticker","tickerRef","dOnResize","height","nextOffset","map","newEl","onResize","onFinish","filter","this","undefined","useReferrals","account","useWallet","referralContract","useReferralContract","useState","referralsCount","setReferralsCount","loading","setLoading","useEffect","methods","call","then","finally","StyledReferralCard","styled","Card","ReferralCard","referrals","style","fontSize","marginBottom","marginTop","UnlockButton","Referrals","Page","TickerBar","as","size","color","mb","textAlign","TranslateString"],"mappings":"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","file":"static/js/13.edd5c805.chunk.js","sourcesContent":["const debounce = (fn, time) => {\n  let timeout\n\n  return function () {\n    const functionCall = () => fn.apply(this, arguments)\n\n    clearTimeout(timeout)\n    timeout = setTimeout(functionCall, time)\n  }\n}\n\nexport default debounce\n","// https://stackoverflow.com/questions/6860853/generate-random-string-for-div-id#6860916\n\nexport default () => {\n  const S4 = () => (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4())\n}\n","export default function getHighest(elements) {\n  let highest = 0\n  elements.forEach(el => {\n    if (el.rect.height > highest) {\n      highest = el.rect.height\n    }\n  })\n  return highest\n}\n","export default function nextTriggerOnMount({ rect, mode, prevOffset, position, direction, width }) {\n  if (mode !== 'chain') return false\n  switch (direction) {\n    case 'toRight':\n      return position.from > 0\n    case 'toLeft':\n    default:\n      return rect.width + position.from <= width\n  }\n}\n","function getFromOffset({ rect, offset, direction }) {\n  switch (direction) {\n    case 'toRight':\n      return offset - rect.width\n    case 'toLeft':\n    default:\n      return offset\n  }\n}\n\nfunction getFrom({ index, rect, offset, width, direction }) {\n  if (index === 0) return offset\n\n  if (typeof offset === 'number') {\n    return getFromOffset({ rect, offset, direction })\n  }\n\n  switch (direction) {\n    case 'toRight':\n      return -rect.width\n    case 'toLeft':\n    default:\n      return width\n  }\n}\n\nfunction getTo({ rect, width, direction }) {\n  switch (direction) {\n    case 'toRight':\n      return width\n    case 'toLeft':\n    default:\n      return -rect.width\n  }\n}\n\nfunction getNext({ mode, from, direction, rect, width }) {\n  const start = from || 0\n\n  switch (mode) {\n    case 'await':\n      switch (direction) {\n        case 'toRight':\n          return width\n        case 'toLeft':\n        default:\n          return -rect.width\n      }\n    case 'smooth':\n      switch (direction) {\n        case 'toRight':\n          return rect.width > width\n            ? 0\n            : width - rect.width\n        case 'toLeft':\n        default:\n          return rect.width > width\n            ? width - rect.width\n            : 0\n      }\n    case 'chain':\n    default:\n      switch (direction) {\n        case 'toRight':\n          return 0\n        case 'toLeft':\n        default:\n          return rect.width + start > width\n            ? width - rect.width\n            : width - rect.left - rect.width\n      }\n  }\n}\n\nexport default ({ mode, index, rect, offset, width, direction }) => {\n  const from = getFrom({ index, rect, offset, width, direction })\n  const to = getTo({ rect, width, direction })\n  return {\n    from,\n    to,\n    next: getNext({ mode, from, direction, rect, width })\n  }\n}\n","export default function getNextOffset({ from, rect, direction }) {\n  switch (direction) {\n    case 'toRight': {\n      return from\n    }\n    case 'toLeft':\n    default: {\n      return from + rect.width\n    }\n  }\n}\n","export default function getStartOffset({ offset, rect, direction, width }) {\n  if (offset === 'run-in') {\n    switch (direction) {\n      case 'toRight':\n        return -rect.width\n      case 'toLeft':\n      default:\n        return width\n    }\n  }\n  if (typeof offset === 'string') {\n    const offsetRelative = Number(offset.replace('%', ''))\n    if (offsetRelative) return (width / 100) * offsetRelative\n  }\n  return offset\n}\n","import React from 'react'\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types'\n\nimport shouldNextTriggerOnMount from './utils/shouldNextTriggerOnMount'\nimport getPosition from './utils/getPosition'\nimport getNextOffset from './utils/getNextOffset'\nimport getStartOffset from './utils/getStartOffset'\n\nclass TickerElement extends React.Component {\n  static propTypes = {\n    children: oneOfType([node, func]).isRequired,\n    direction: string.isRequired,\n    speed: number.isRequired,\n    id: string.isRequired,\n    index: number.isRequired,\n    mode: string.isRequired,\n    move: bool.isRequired,\n    onNext: func.isRequired,\n    onFinish: func.isRequired,\n    setRect: func.isRequired,\n    start: bool.isRequired,\n\n    offset: oneOfType([number, string]),\n    prevRect: object,\n    width: number\n  }\n\n  static defaultProps = {\n    offset: undefined,\n    width: undefined,\n    prevRect: null\n  }\n\n  state = {\n    children: this.props.children({\n      index: this.props.index\n    }),\n    move: this.props.move,\n    position: { from: undefined, to: undefined, next: undefined },\n    offset: this.props.offset,\n    rect: null\n  }\n  x = 0\n  isMoving = false\n  nextTriggered = false\n  elementRef = React.createRef()\n\n  componentDidMount = () => {\n    this.setPosition(true)\n    this.observer = new MutationObserver(this.onMutation)\n    this.observer.observe(this.elementRef.current, { characterData: true, childList: true, subtree: true })\n  }\n\n  componentWillUnmount = () => {\n    this.observer.disconnect()\n  }\n\n  onMutation = () => {\n    this.setPosition()\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (!this.x && prevState.position.from !== this.state.position.from) {\n      this.x = this.state.position.from\n      this.elementRef.current.style.transform = `translate3d(${this.x}px, 0, 0)`\n    }\n    if (this.x !== this.state.position.from &&\n      prevProps.prevRect &&\n      this.props.prevRect &&\n      prevProps.prevRect.width !== this.props.prevRect.width) {\n      if (this.props.offset) {\n        this.x = this.x + (this.props.offset - prevProps.offset)\n      } else {\n        this.x = this.x + (this.props.prevRect.width - prevProps.prevRect.width)\n      }\n      this.elementRef.current.style.transform = `translate3d(${this.x}px, 0, 0)`\n    }\n    if (this.props.move && !prevProps.start && this.props.start) {\n      this.animate()\n    }\n    if (this.props.start && !prevProps.move && this.props.move) {\n      this.animate()\n    }\n    if (prevProps.move && !this.props.move) {\n      this.isMoving = false\n    }\n  }\n\n  setPosition = (isMount) => {\n    const {\n      mode,\n      width,\n      id,\n      onNext,\n      direction,\n      index,\n      setRect\n    } = this.props\n\n    const rect = this.elementRef.current.getBoundingClientRect()\n    if (rect.width === 0) return\n\n    const offset = this.props.index === 0\n      ? getStartOffset({ offset: this.props.offset, rect, direction, width })\n      : this.props.offset\n\n    const position = getPosition({ mode, rect, index, offset, width, direction })\n\n    setRect({\n      index: this.props.index,\n      rect,\n      offset,\n      nextOffset: getNextOffset({ from: position.from, rect, direction })\n    })\n\n    if (isMount) {\n      const nextTriggerOnMount = shouldNextTriggerOnMount({ mode, rect, position, offset, direction, width })\n      if (nextTriggerOnMount) {\n        onNext({\n          id,\n          index,\n          rect,\n          nextOffset: getNextOffset({ from: position.from, rect, direction })\n        })\n      }\n      if (!nextTriggerOnMount && (offset || index === 0)) {\n        onNext({ id, index, rect })\n      }\n      this.nextTriggered = nextTriggerOnMount\n    }\n\n    this.setState({\n      rect,\n      offset,\n      position\n    })\n  }\n\n  shouldTriggerNext = () => {\n    if (this.nextTriggered) return false\n    return this.props.direction === 'toLeft'\n      ? this.x <= this.state.position.next\n      : this.x >= this.state.position.next\n  }\n\n  triggerNext = () => {\n    if (this.shouldTriggerNext()) {\n      // if (this.props.index === 5) console.log(this.x)\n      this.nextTriggered = true\n      this.props.onNext({\n        id: this.props.id,\n        index: this.props.index,\n        rect: this.state.rect\n      })\n    }\n  }\n\n  shouldFinish = () => {\n    switch (this.props.direction) {\n      case 'toRight':\n        return this.x >= this.state.position.to\n      case 'toLeft':\n      default:\n        return this.x <= this.state.position.to\n    }\n  }\n\n  animate = () => {\n    if (this.isMoving) return\n    this.isMoving = true\n\n    let prevTimestamp = null\n\n    const step = (timestamp) => {\n      if (!this.isMoving) return\n      if (!this.elementRef.current) return\n\n      const progress = prevTimestamp\n        ? timestamp - prevTimestamp\n        : 0\n\n      this.x = this.props.direction === 'toLeft'\n        ? this.x - (progress / 100 * this.props.speed)\n        : this.x + (progress / 100 * this.props.speed)\n      this.elementRef.current.style.transform = `translate3d(${this.x}px, 0, 0)`\n      this.triggerNext()\n\n      if (this.shouldFinish()) {\n        this.isMoving = false\n        prevTimestamp = null\n        this.props.onFinish(this.props.id)\n      } else {\n        prevTimestamp = timestamp\n        window.requestAnimationFrame(step)\n      }\n    }\n    window.requestAnimationFrame(step)\n  }\n\n  render = () => (\n    <div\n      className='ticker__element'\n      style={{\n        willChange: 'transform',\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        transform: `translate3d(${this.x}px, 0, 0)`\n      }}\n      ref={this.elementRef}\n    >\n      {this.state.children}\n    </div>\n  )\n}\n\nexport default TickerElement\n","\nimport guidGenerator from './guidGenerator'\n\nconst getDefaultState = (offset, width) => ({\n  elements: [{\n    id: guidGenerator(),\n    index: 0,\n    height: 0,\n    start: false,\n    offset: offset,\n    rect: null,\n    prevRect: null\n  }],\n  width,\n  height: 0\n})\n\nexport default getDefaultState\n","import React from 'react'\nimport { bool, func, node, number, oneOfType, string } from 'prop-types'\nimport debounce from './utils/debounce'\nimport guidGenerator from './utils/guidGenerator'\nimport getHighest from './utils/getHighest'\nimport TickerElement from './Element'\nimport getDefaultState from './utils/getDefaultState'\n\nexport default class Ticker extends React.Component {\n  static propTypes = {\n    children: oneOfType([node, func]).isRequired,\n\n    direction: string,\n    mode: string,\n    move: bool,\n    offset: oneOfType([number, string]),\n    speed: number,\n    height: oneOfType([number, string])\n  }\n\n  static defaultProps = {\n    offset: 0,\n    speed: 5,\n    direction: 'toLeft',\n    mode: 'chain',\n    move: true,\n    height: undefined\n  }\n  next = null\n  state = getDefaultState(this.props.offset)\n  tickerRef = React.createRef()\n\n  dOnResize = debounce(() => this.onResize(), 150)\n\n  componentDidMount = () => {\n    this.setState({\n      width: this.tickerRef.current.offsetWidth,\n      height: this.props.height\n    })\n    window.addEventListener('resize', this.dOnResize)\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener('resize', this.dOnResize)\n  }\n\n  setRect = ({ index, rect, offset, nextOffset }) => {\n    this.setState(prevState => {\n      const elements = prevState.elements.map(el => {\n        const newEl = el\n        if (el.index === index) newEl.rect = rect\n        // next element\n        if (el.index === index + 1) {\n          newEl.prevRect = rect\n          if (newEl.offset) {\n            newEl.offset = nextOffset\n          }\n        }\n        return newEl\n      })\n      return {\n        elements,\n        height: this.props.height\n          ? prevState.height\n          : getHighest(elements)\n      }\n    })\n  }\n\n  onResize = () => {\n    if (!this.tickerRef.current || this.tickerRef.current.offsetWidth === this.state.width) return\n    this.setState({\n      ...getDefaultState(this.props.offset, this.tickerRef.current.offsetWidth),\n      height: this.props.height\n    })\n  }\n\n  onFinish = (id) => {\n    this.setState(prevState => ({\n      elements: prevState.elements.filter(el => el.id !== id)\n    }))\n  }\n\n  onNext = ({ id, index, rect, nextOffset }) => {\n    this.setState(prevState => ({\n      elements: [\n        // start next element\n        ...prevState.elements.map(el => {\n          const newEl = el\n          if (el.index === index) newEl.rect = rect\n          if (el.index === 0 || el.offset || newEl.index === index + 1) {\n            newEl.start = true\n          }\n          return newEl\n          // create new element\n        }), {\n          id: guidGenerator(),\n          index: prevState.elements[prevState.elements.length - 1].index + 1,\n          height: 0,\n          start: false,\n          offset: nextOffset,\n          rect: null,\n          prevRect: rect\n        }\n      ]\n    }))\n  }\n\n  render() {\n    return (\n      <div\n        className='ticker'\n        ref={this.tickerRef}\n        style={{\n          position: 'relative',\n          overflow: 'hidden',\n          height: this.state.height && `${this.state.height}px`\n        }}\n      >\n        {\n          this.state.width && this.state.elements.map(el => {\n            return (\n              <TickerElement\n                key={el.id}\n                id={el.id}\n                index={el.index}\n                start={el.start}\n                offset={el.offset}\n                prevRect={el.prevRect}\n\n                direction={this.props.direction}\n                mode={this.props.mode}\n                move={this.props.move}\n                speed={this.props.speed}\n\n                onFinish={this.onFinish}\n                onNext={this.onNext}\n                setRect={this.setRect}\n                width={this.state.width}\n              >\n                {this.props.children}\n              </TickerElement>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n","import { useWallet } from \"@binance-chain/bsc-use-wallet\"\nimport { useEffect, useState } from \"react\"\nimport { useReferralContract } from \"./useContract\"\n\nconst useReferrals = () => {\n  const { account } = useWallet()\n  const referralContract = useReferralContract()\n  const [referralsCount, setReferralsCount] = useState<number | null>(null)\n  const [loading, setLoading] = useState<boolean>(true)\n\n  useEffect(() => {\n    if (account) {\n      referralContract.methods.referralsCount(account).call()\n        .then(setReferralsCount)\n        .finally(() => setLoading(false))\n    } else {\n      setLoading(false)\n    }\n  }, [account, referralContract])\n\n  return {\n    referralsCount,\n    loading\n  }\n}\n\nexport default useReferrals\n","import React from 'react'\nimport { Card, CardBody, Spinner } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useReferrals from 'hooks/useReferral'\n\nconst StyledReferralCard = styled(Card)`\n  text-align: center;\n`\n\nconst ReferralCard = () => {\n  const { account } = useWallet()\n  const referrals = useReferrals()\n\n  if (referrals.loading) {\n    return <Spinner />\n  }\n\n  return (\n    <StyledReferralCard>\n      <CardBody>\n        {\n          account\n            ?\n            <>\n              <h1 style={{ fontSize: 24, marginBottom: 32 }}>Your Referral Link</h1>\n              <p>https://marsswap.finance/?ref={account}</p>\n              <h1 style={{ fontSize: 24, marginTop: 32, marginBottom: 16 }}>Total Referrals</h1>\n              <p>{referrals?.referralsCount}</p>\n            </>\n            :\n            <>\n              <UnlockButton />\n              <p style={{ marginTop: 16 }}>Unlock wallet to get your unique referral link.</p>\n            </>\n        }\n      </CardBody>\n    </StyledReferralCard>\n  )\n}\n\nexport default ReferralCard\n","import { Heading } from '@pancakeswap-libs/uikit'\nimport Page from 'components/layout/Page'\nimport TickerBar from 'components/TickerBar'\nimport React from 'react'\nimport { TranslateString } from 'utils/translateTextHelpers'\nimport ReferralCard from './components/ReferralCard'\n\nconst Referrals: React.FC = () => {\n  return (\n    <Page>\n      <TickerBar />\n      <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {\n          TranslateString(10006, 'Invite your friends to MarsSwap and earn rewards')\n        }\n      </Heading>\n      <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        Earn 1% of your friend&#39;s earnings! Share this link to invite friends:\n      </Heading>\n      <ReferralCard />\n    </Page>\n  )\n}\n\nexport default Referrals\n"],"sourceRoot":""}